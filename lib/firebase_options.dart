// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  // Read API keys from compile-time environment to avoid committing secrets
  static const String _webApiKey = String.fromEnvironment(
    'FIREBASE_WEB_API_KEY',
    defaultValue: '',
  );
  static const String _androidApiKey = String.fromEnvironment(
    'FIREBASE_ANDROID_API_KEY',
    defaultValue: '',
  );
  static const String _iosApiKey = String.fromEnvironment(
    'FIREBASE_IOS_API_KEY',
    defaultValue: '',
  );
  static const String _macosApiKey = String.fromEnvironment(
    'FIREBASE_MACOS_API_KEY',
    defaultValue: '',
  );
  static const String _windowsApiKey = String.fromEnvironment(
    'FIREBASE_WINDOWS_API_KEY',
    defaultValue: '',
  );
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: _webApiKey,
    appId: '1:996516509004:web:cf40d95616bbd25f0e8be9',
    messagingSenderId: '996516509004',
    projectId: 'clicker-game-app',
    authDomain: 'clicker-game-app.firebaseapp.com',
    storageBucket: 'clicker-game-app.firebasestorage.app',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: _androidApiKey,
    appId: '1:996516509004:android:5625c322406e05470e8be9',
    messagingSenderId: '996516509004',
    projectId: 'clicker-game-app',
    storageBucket: 'clicker-game-app.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: _iosApiKey,
    appId: '1:996516509004:ios:fac554619b9dd2ba0e8be9',
    messagingSenderId: '996516509004',
    projectId: 'clicker-game-app',
    storageBucket: 'clicker-game-app.firebasestorage.app',
    iosBundleId: 'com.example.clickerGame',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: _macosApiKey,
    appId: '1:996516509004:ios:fac554619b9dd2ba0e8be9',
    messagingSenderId: '996516509004',
    projectId: 'clicker-game-app',
    storageBucket: 'clicker-game-app.firebasestorage.app',
    iosBundleId: 'com.example.clickerGame',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: _windowsApiKey,
    appId: '1:996516509004:web:483bc6631f184c7d0e8be9',
    messagingSenderId: '996516509004',
    projectId: 'clicker-game-app',
    authDomain: 'clicker-game-app.firebaseapp.com',
    storageBucket: 'clicker-game-app.firebasestorage.app',
  );
}
